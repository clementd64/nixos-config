protocol device {}

protocol static {
    ipv6;
    route ::/0 blackhole;
}

# TODO: split bogons into general bogons and peer restricted bogons. (e.g. private IP is valid internally but not in WAN)

define BOGON_ASNS = [
    0, # Reserved
    23456, # AS_TRANS
    64496..64511, # Documentation
    64512..65534, # Private Use
    65535, # Reserved
    65536..65551, # Documentation
    65552..131071, # Reserved
    4200000000..4294967294, # Private Use
    4294967295 # Reserved
];

define BOGON_IPV4 = [
    0.0.0.0/8,
    10.0.0.0/8+, # Private Use
    100.64.0.0/10+, # Shared Address Space
    169.254.0.0/16+, # Link Local
    172.16.0.0/12+, # Private Use
    185.1.0.0/16+, # RIPE IXP Assignment
    192.0.0.0/24+, # IETF Protocol Assignments
    192.0.2.0/24+, # TEST-NET-1
    192.168.0.0/16+, # Private Use
    198.18.0.0/15+, # Benchmarking
    198.51.100.0/24+, # TEST-NET-2
    203.0.113.0/24+, # TEST-NET-3
    224.0.0.0/4+, # Multicast
    240.0.0.0/4+ # Reserved
];

define BOGON_IPV6 = [
    ::1/128, # Loopback
    ::ffff:0:0/96+, # IPv4-mapped
    64:ff9b:1::/48+, # IPv4-IPv6 Translation
    2001::/23, # IETF Protocol Assignments
    2001:2::/48+, # Benchmarking
    2001:db8::/32+, # Documentation
    3fff::/20+, # Documentation
    5f00::/16+, # Segment Routing
    fc00::/16+, # Unique Local
    fe80::/10+, # Link Local
    ff00::/8+ # Multicast
];

filter upstream_import_v4 {
    if(net.len > 24) then reject;
    if(net ~ BOGON_IPV4) then reject;
    if(bgp_path.last ~ BOGON_ASNS) then reject;
    accept;
}

filter upstream_import_v6 {
    if(net.len > 48) then reject;
    if(net ~ BOGON_IPV6) then reject;
    if(bgp_path.last ~ BOGON_ASNS) then reject;
    accept;
}

filter upstream_export_v6 {
    if(net ~ [ 2a0c:b641:2b0::/44{44,48} ]) then accept;
    reject;
}

template bgp UPSTREAM {
    local as 212625;
    ipv6 {
        import filter upstream_import_v6;
        export filter upstream_export_v6;
    };
}

template bgp SERVER {
    local as 212625;
    ipv6 {
        export filter {
            if(net ~ [ ::/0 ]) then accept;
            reject;
        };
    };
}
